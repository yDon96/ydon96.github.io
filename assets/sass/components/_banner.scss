///
/// Story by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Banner (transitions) */

	.banner {

		// Mixin.
			@mixin transition-banner($event) {
				$x: null;
				$y: null;

				@if ($event == 'load') {
					$x: 'body.is-preload &';
					$y: _duration(on-load);
				}
				@else if ($event == 'scroll') {
					$x: '&.is-inactive';
					$y: _duration(on-scroll);
				}

				// Content.
					&.on#{$event}-content-fade-up {
						.content {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));
						}

						#{$x} {
							.content {
								@include vendor('transform', 'translateY(1rem)');
								opacity: 0;
							}
						}
					}

					&.on#{$event}-content-fade-down {
						.content {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));
						}

						#{$x} {
							.content {
								@include vendor('transform', 'translateY(-1rem)');
								opacity: 0;
							}
						}
					}

					&.on#{$event}-content-fade-left {
						.content {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));
						}

						#{$x} {
							.content {
								@include vendor('transform', 'translateX(1rem)');
								opacity: 0;
							}
						}
					}

					&.on#{$event}-content-fade-right {
						.content {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));
						}

						#{$x} {
							.content {
								@include vendor('transform', 'translateX(-1rem)');
								opacity: 0;
							}
						}
					}

					&.on#{$event}-content-fade-in {
						.content {
							@include vendor('transition', 'opacity #{$y} ease-in-out');
						}

						#{$x} {
							.content {
								opacity: 0;
							}
						}
					}

				// Image.
					&.on#{$event}-image-fade-up {
						.image {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));

							img {
								@include vendor('transition', 'opacity #{$y} ease-in-out');
								@include vendor('transition-delay', '#{$y * 0.75}');
							}
						}

						#{$x} {
							.image {
								@include vendor('transform', 'translateY(1rem)');
								opacity: 0;

								img {
									opacity: 0;
								}
							}
						}
					}

					&.on#{$event}-image-fade-down {
						.image {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));

							img {
								@include vendor('transition', 'opacity #{$y} ease-in-out');
								@include vendor('transition-delay', '#{$y * 0.75}');
							}
						}

						#{$x} {
							.image {
								@include vendor('transform', 'translateY(-1rem)');
								opacity: 0;

								img {
									opacity: 0;
								}
							}
						}
					}

					&.on#{$event}-image-fade-left {
						.image {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));

							img {
								@include vendor('transition', 'opacity #{$y} ease-in-out');
								@include vendor('transition-delay', '#{$y * 0.75}');
							}
						}

						#{$x} {
							.image {
								@include vendor('transform', 'translateX(1rem)');
								opacity: 0;

								img {
									opacity: 0;
								}
							}
						}
					}

					&.on#{$event}-image-fade-right {
						.image {
							@include vendor('transition', (
								'opacity #{$y} ease-in-out',
								'transform #{$y} ease-in-out'
							));

							img {
								@include vendor('transition', 'opacity #{$y} ease-in-out');
								@include vendor('transition-delay', '#{$y * 0.75}');
							}
						}

						#{$x} {
							.image {
								@include vendor('transform', 'translateX(-1rem)');
								opacity: 0;

								img {
									opacity: 0;
								}
							}
						}
					}

					&.on#{$event}-image-fade-in {
						.image {
							img {
								@include vendor('transition', 'opacity #{$y} ease-in-out');
							}
						}

						#{$x} {
							.image {
								img {
									opacity: 0;
								}
							}
						}
					}

			}

		// On Load.
			@include transition-banner('load');

		// On Scroll.
			@include transition-banner('scroll');

	}

/* Banner (style1) */

	.banner.style1 {
		@include vendor('align-items', 'stretch');
		@include vendor('display', 'flex');
		@include vendor('flex-direction', 'row');
		@include vendor('justify-content', 'flex-end');
		position: relative;
		text-align: left;
		overflow-x: hidden;

		.content {
			@include padding(_size(padding, default), _size(padding, default));
			@include vendor('align-self', 'center');
			@include vendor('flex-grow', '1');
			@include vendor('flex-shrink', '1');
			width: 50%;
			max-width: (_size(inner) * 0.75);
			margin: 0 auto;

			h1 {
				font-size: 4.35em;
				font-weight: 900;
				letter-spacing: 0.015em;
				line-height: 1em;
				color: _palette(fg-bold);
			}
	
			p {
				font-size: 1.25em;
				margin: 0.75em 0 1.25em 0;
				opacity: 0.75;
				color: _palette(fg-light);
			}

			.list {
				display: flex;
				flex-direction: row;
				flex-wrap: wrap;
				margin: 0.75em 0 1.25em 0;


				li {
					font-size: 0.90em;
					margin: 0.75em 1.5em 0.25em 0;
					opacity: 0.75;
					border-radius: 3.75em;
					padding: 0 0.9em;
					color: _palette(fg);
					background-color: _palette(fg-light);
				}
			}
		}

		.image {
			@include vendor('flex-grow', '0');
			@include vendor('flex-shrink', '0');
			border-radius: 0;
			width: 50%;

			img {
				@include vendor('object-fit', 'cover');
				@include vendor('object-position', 'center');
				display: block;
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				border-radius: 0;
			}
		}

		@include breakpoint('<=wide') {
			.content {
				@include padding(_size(padding, wide), _size(padding, wide));
			}
		}

		@include breakpoint('<=normal') {
			.content {
				@include padding(_size(padding, normal), _size(padding, normal));
			}
		}

		@include breakpoint('<=mobile') {
			.content {
				@include padding(_size(padding, mobile) * 1.25, _size(padding, mobile));
			}
		}

		@include orientation(portrait) {
			@include vendor('flex-direction', 'column-reverse');
			text-align: center;

			.content {
				@include vendor('display', 'flex');
				@include vendor('flex-direction', 'column');
				@include vendor('justify-content', 'center');
				width: 100%;
				max-width: 100%;
			}

			.image {
				width: 100%;
				max-width: 100%;
				height: 45vh;
			}
		}

		// Modifiers.

			// Size.
				&.fullscreen {
					min-height: 100vh;

					@include orientation(portrait) {
						.content {
							min-height: 50vh;
						}

						.image {
							height: 50vh;
						}
					}
				}

			// Orientation.
				&.orient-left {
					// ...
				}

				&.orient-right {
					@include vendor('flex-direction', 'row-reverse');

					@include orientation(portrait) {
						@include vendor('flex-direction', 'column-reverse');
					}
				}

			// Content Alignment.
				&.content-align-left {
					// ...
				}

				&.content-align-center {
					text-align: center;
				}

				&.content-align-right {
					text-align: right;

					@include orientation(portrait) {
						text-align: center;
					}
				}

			// Image Position.
				&.image-position-left {
					.image {
						img {
							@include vendor('object-position', 'left');
						}
					}
				}

				&.image-position-center {
					.image {
						img {
							// ...
						}
					}
				}

				&.image-position-right {
					.image {
						img {
							@include vendor('object-position', 'right');
						}
					}
				}

	}

	@mixin color-banner($p: null) {
		.banner {
			.image {
				background-color: transparentize(_palette($p, fg-bold), 0.875);
			}

			@if ($p != 'invert') {
				&.invert {
					.image {
						background-color: transparentize(_palette(invert, fg-bold), 0.875);
					}
				}
			}
		}
	}

	@include color-banner;